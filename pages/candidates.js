import React, { useState } from 'react';
import Head from 'next/head';
import styles from '../styles/candidates.module.css';
export default function Candidates() {
  const [fname, setFname] = useState('');
  const [lname, setLname] = useState('');
  const [nick, setNick] = useState('');
  const [matric, setMatric] = useState('');
  const [active, setActive] = useState(false);
  const [error, setError] = useState('');

  const handleEvent = () => {
    setActive(true);
  };
  const handleBlur = () => {
    matric === '' && setActive(false);
  };
  const handleChange = (e) => {
    setMatric(e.target.value);
    setError('');
  };
  // const handleSubmit = async (e) => {
  //   e.preventDefault();
  //   const resp = await fetch('/api/login', {
  //     method: 'POST',
  //     headers: {
  //       'Content-Type': 'application/json',
  //     },
  //     body: JSON.stringify({ matric }),
  //   });

  //   const data = await resp.json();
  //   if (resp.status === 200) {
  //     return router.push('/candidates');
  //   }
  //   setError(data.message);
  // };

  return (
    <>
      <Head>
        <title>Candidate</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <section className={styles.access}>
          <div className={styles.content}>
            <h1 className={styles.heading}>Candidate - Register</h1>
            <section className={styles.full__width}>
              <form
                className={styles.form}
                action="/api/login"
                method="POST"
                onSubmit={(e) => handleSubmit(e)}
              >
                <div className={styles.input_group}>
                  <input
                    className={styles.input}
                    autoComplete="off"
                    name="fname"
                    type="text"
                    required=""
                    value={fname}
                    onChange={(e) => handleChange(e)}
                    onBlur={() => handleBlur()}
                  />
                  <label>First Name</label>
                  {error !== '' && <p className={styles.error}>{error}</p>}
                </div>
                <div className={styles.input_group}>
                  <input
                    className={styles.input}
                    autoComplete="off"
                    name="lname"
                    type="text"
                    required=""
                    value={lname}
                    onChange={(e) => handleChange(e)}
                    onBlur={() => handleBlur()}
                  />
                  <label>Last Name</label>
                  {error !== '' && <p className={styles.error}>{error}</p>}
                </div>
                <div className={styles.content_inline}>
                  <div className={styles.input_group}>
                    <input
                      className={styles.input}
                      autoComplete="off"
                      name="nick"
                      type="text"
                      required=""
                      value={nick}
                      onChange={(e) => handleChange(e)}
                      onBlur={() => handleBlur()}
                    />
                    <label>Nickname</label>
                    {error !== '' && <p className={styles.error}>{error}</p>}
                  </div>
                  <div className={styles.level}>
                    <select
                      className={styles.level_select}
                      name="level"
                      id="level"
                    >
                      <option value="" selected disabled>
                        Level
                      </option>
                      <option value="100">100</option>
                      <option value="200">200</option>
                      <option value="300">300</option>
                      <option value="400">400</option>
                      <option value="500">500</option>
                    </select>

                    {error !== '' && <p className={styles.error}>{error}</p>}
                  </div>
                </div>
                <div className={styles.input_group}>
                  <input
                    className={styles.input}
                    autoComplete="off"
                    name="matric"
                    type="text"
                    required=""
                    value={matric}
                    onChange={(e) => handleChange(e)}
                    onBlur={() => handleBlur()}
                  />
                  <label>Matric Number</label>
                  {error !== '' && <p className={styles.error}>{error}</p>}
                </div>
                <div className={styles.position}>
                  <select name="position" className={styles.position_select}>
                    <option value="" selected disabled>
                      Position
                    </option>
                    <option value="president">President</option>
                    <option value="vice-president">Vice President</option>
                    <option value="secretary">Secretary</option>
                    <option value="treasurer">Treasurer</option>
                    <option value="organizing-secretary">
                      Organizing Secretary
                    </option>
                  </select>
                </div>

                <button type="submit" className={styles.btn}>
                  Login
                </button>
              </form>
            </section>
          </div>
        </section>
      </main>
    </>
  );
}
